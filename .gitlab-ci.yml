stages:
  - code_check
  - code_security
  - docker_check
  - docker_build
  - docker_security
  - code_test
  - docker_release

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

code_pre_commit:
  stage: code_check
  image: python:3.12.2
  before_script:
    - pip install pre-commit
  script:
    - if [ $CI_COMMIT_BRANCH == "main" ] ; then
    -   pre-commit run --all-files
    - else
    -   git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    -   pre-commit run --from-ref FETCH_HEAD --to-ref HEAD
    - fi
  allow_failure: true

sast_bandit:
  stage: code_security
  image: python:3.12.2
  before_script:
    - pip install bandit
  script:
    - bandit -r .
  allow_failure: true

sast_semgrep:
  stage: code_security
  image: python:3.12.2
  before_script:
    - pip install semgrep
  script:
    - semgrep --config=auto --junit-xml --output sast-report.xml --error .
  artifacts:
    reports:
      junit:
        - sast-report.xml
  allow_failure: true

sca_safety:
  stage: code_security
  image: python:3.12.2
  before_script:
    - pip install safety
  script:
    - safety check -r requirements.txt
  allow_failure: true

include:
  - '.docker.gitlab-ci.yml'
  - '.django.gitlab-ci.yml'
